clear; clc;
multithreading()

% TEST(@test_fraction_size, "Size", 100:50:200, "Fractions", 0.05:0.05:0.3, "sample_size", 10)
% TEST(@test_different_fractions, "FracDist", 0.05:0.05:0.3, "FracTarg", 0.05:0.05:0.3, "sample_size", 10)
% TEST(@test_size, "", "", "Size", 30:30:180, "fract_targ", 0.3, "sample_size", 10)
% TEST(@test_node_degree, "", "", "AverageDegree", 2:1:7, "sample_size", 10)
% TEST(@test_strogatz_fraction_beta, "Beta", 0:0.2:1, "Fractions", 0.05:0.05:0.3, "graph_generating_algorithm", "Watts Strogratz", "sample_size", 10)
TEST(@test_strogatz_size_beta, "Beta", 0:0.2:1, "Size", 30:30:180, "graph_generating_algorithm", "Watts Strogratz", "sample_size", 10)


% state feedback
% test_fraction_size("sample_size", 500)
% test_different_fractions("sample_size", 500)
% test_size("sample_size", 500)
% test_node_degree("sample_size", 500)
% test_strogatz_fraction_beta("sample_size", 500)

% test_strogatz_size_beta("sample_size", 500)

% test_scale_fraction_alphagamma("sample_size", 500)
% test_scale_fraction_beta("sample_size", 500)
% test_scale_size_alphagamma("sample_size", 500)
% test_scale_size_beta("sample_size", 500)

% % output feedback
% test_fraction_size("ddp", "output_feedback")
% test_different_fractions("ddp", "output_feedback")
% test_size("ddp", "output_feedback")
% test_node_degree("ddp", "output_feedback")
% test_strogatz_fraction_beta("ddp", "output_feedback")
% test_strogatz_size_beta("ddp", "output_feedback")
% test_scale_fraction_alphagamma("ddp", "output_feedback")
% test_scale_fraction_beta("ddp", "output_feedback")
% test_scale_size_alphagamma("ddp", "output_feedback")
% test_scale_size_beta("ddp", "output_feedback")